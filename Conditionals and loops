What is the output
Send Feedback
#include <iostream>
using namespace std;
int main()
{
    int x = 5; 
    if (x < 6)
        cout <<  “Hello ”;
    if(x == 5){
        cout << “Hi ”;
    }
    else { 
        cout << “Hey ”;
    } 
}
Options
This problem has only one correct answer
Hello
Hi
Hello Hi
Hello Hey
check_circle
Hurray! Correct Answer - Hello Hi
Solution Description
First if condition is true, so "Hello " will be printed. After that, next if condition will be evaluated (as both if's are independent if's) which is again true. Hence, next "Hi " will be printed (obviously in same line). We won't go inside else, as if is already executed.



What is the output
Send Feedback
#include <iostream>
using namespace std;
int main() {
    int x = 15;
    if(x <= 15) {
        cout << "Inside if ";
    } else if(x == 15) {
        cout << "Inside else if ";
    }
    cout << x;
}
Options
This problem has only one correct answer
Inside if
15
Inside if Inside else if 15
Inside if 15
check_circle
Hurray! Correct Answer - Inside if 15
Solution Description
The condition inside if is true, hence statement "Inside if" will be printed. After that, we'll directly jump to statement : cout << x. So, after that 15 will be printed


What is the output
Send Feedback
#include <iostream>
using namespace std; 
int main()
{
        int var1 = 5; 
        int var2 = 6;
        if ((var2 = 1) == var1)
           cout << var2;
        else 
            cout  << (var2 + 1); 
}
This problem has only one correct answer
7
1
2
6
check_circle
Hurray! Correct Answer-2
Solution Description
Inside if condition, we are doing if((var2 = 1) == var1), So first 1 will be assigned to var2 and then it'll be compared with var1. Before comparison, var2 = 1 and var1 = 5, which are not equal. So, we'll move to else part and there the value of (var2 + 1) i.e. 2 will be printed.


If statement
Send Feedback
For what values of the x is an if-statement block not executed ?
       if((1+x) != (1-x)) {
          cout<<"In if block";
         }
         Options
This problem has only one correct answer
0 and all negative values
0 and -1
0, all negative values, all positive values except 1
0
check_circle
Hurray! Correct Answer - 0
Solution Description
The if-statement block is only not executed when the value of x is  0. For all other values, it will be treated as true  


What is the output
Send Feedback
#include <iostream>
using namespace std;
int main() {
    int a = 10, b = 20, c = 100;
    if(a <= b || c <= b) {
        cout << "hello" << endl;
    }
    else if(a <= b || a <= c) {
        cout << "hi" << endl;
    }
    else {
        cout << "hey" << endl;
    }
    Answer
hello
Correct Answer
Solution Description
In if condition, we are using logical OR operator ("||"). So if even one condition is true, final answer will be true


What is the output
Send Feedback
#include <iostream>
using namespace std;
int main() {
    int a = 10, b = 20, c = 30;
    if(a <= b && !b) {
        cout << "hello";
    }
    else if(c >= a && c >= b) {
        cout << "hi";
    }
    else {
        cout << "hey";
    }
}
Answer
hi
Correct Answer
Solution Description
a <= b evaluates to true, but !b evaluates to false (! operator negates the value, b is non-zero and hence !b becomes 0 which is false). For AND operator ("&&"), all the condition must be true. So we'll move to else if condition which evaluates to be true as both conditions (c >= a and c >= b) are true. Hence, "hi" will be printed.




Check Case
Send Feedback
Write a program that takes a character as input and prints either 1, 0 or -1 according to the following rules.
1, if the character is an uppercase alphabet (A - Z)
0, if the character is a lowercase alphabet (a - z)
-1, if the character is not an alphabet
Input format :
Single Character
Output format :
1 or 0 or -1
Constraints :
Input can be any character
Sample Input 1 :
v
Sample Output 1 :
0
Sample Input 2 :
V
Sample Output 2 :
1
Sample Input 3 :
#
Sample Output 3 :
-1
#include<iostream>
using namespace std;
#include<bits/stdc++.h>

int main() {
    char ch;
    cin>>ch;
    if (isupper(ch))
    {
        cout<<"1";
    }
    else if (islower(ch))
    { cout<<"0"; }
    else
    { cout<<"-1";
    }
    return 0;
	}
  
  
  
  
  
  Sum of Even Numbers till N
Send Feedback
Given a number N, print sum of all even numbers from 1 to N.
Input Format :
Integer N
Output Format :
Required Sum 
Sample Input 1 :
 6
Sample Output 1 :
12
#include<bits/stdc++.h>
#include<iostream>
using namespace std;
int main() 
{
    int sum = 0, N;
    cin>>N;
    for(int i = 1; i<=N; i++)
    {
        if((i % 2) == 0)
        { 
            sum =  sum + i;
          
        }
    }
    cout<<sum;
}



Fahrenheit to Celsius Table
Send Feedback
Given three values - Start Fahrenheit Value (S), End Fahrenheit value (E) and Step Size (W), you need to convert all Fahrenheit values from Start to End at the gap of W, into their corresponding Celsius values and print the table.
Input Format :
3 integers - S, E and W respectively 
Output Format :
Fahrenheit to Celsius conversion table. One line for every Fahrenheit and corresponding Celsius value in integer form. The Fahrenheit value and its corresponding Celsius value should be separate by single space.
Constraints :
0 <= S <= 90
S <= E <=  900
0 <= W <= 80 
Sample Input 1:
0 
100 
20
Sample Output 1:
0   -17
20  -6
40  4
60  15
80  26
100 37
Sample Input 2:
20
119
13
Sample Output 2:
20  -6
33  0 
46  7
59  15
72  22
85  29
98  36
111 43
Explanation For Input 2:
Start calculating the Celsius values for each Fahrenheit Value which starts from 20. So starting from 20, we need to compute its corresponding Celsius value which computes to -6. We print this information as <Fahrenheit Value> <a single space> <Celsius Value> on each line. Now add 13 to Fahrenheit Value at each step until you reach 119 in this case. You may or may not exactly land on the end value depending on the steps you are taking.
#include<iostream>
using namespace std;


 int main(){
     int S,E,C,W,i=1;
     cin>>S>>E>>W;
     int Cstart =(S - 32.0) * 5.0/9.0;
     int Cend = (E - 32.0) * 5.0/9.0;
    
     cout<<S<<" "<<Cstart<<endl;                            
     while(1)
     {
         int fahr = (S + (i*W));
         if(fahr < E)
         {
         C = (fahr - 32.0) * 5.0/9.0;
         cout<<fahr<<" "<<C<<endl;
         }
         else
             break;
         i++;
         }
    
    return 0;
 }
    

      
  
/*

int main(){

      
    int S,E,W,f,c;
    
    cin >> S >> E >> W;
    f=S;
    
    while(f<=E){
        c=((f-32)*5)/9;
        cout << f << "\t" << c << endl;
        f+=W;
    }
  
}
*/



Number Pattern 1
Send Feedback
Print the following pattern
Pattern for N = 4
1
23
345
4567
Input Format :
N (Total no. of rows)
Output Format :
Pattern in N lines
Sample Input 1 :
3
Sample Output 1 :
1
23
345
#include<iostream>
using namespace std;
#include<bits/stdc++.h>


int main(){

    int i,j,N,k=1;
    cin>>N;
    for(i = 1; i <= N ; i++)
    {
        
        for(j=1;j<=i;j++)
        {
            
            
           cout<<i+j-k; 
        
         }
        cout<<endl;
        
    }
    
   return 0; 
}


Number Pattern 2
Send Feedback
Print the following pattern
Pattern for N = 4


The dots represent spaces.



Input Format :
N (Total no. of rows)
Output Format :
Pattern in N lines
Sample Input :
5
Sample Output :


The dots represent spaces
#include<iostream>
using namespace std;
#include<bits/stdc++.h>


int main(){

    int i = 1,j,k,N,num = 1,temp= 0;
    cin>>N;
    while(i <= N)
    {
        
        for(j = 1;j<=(N - i);j++)
        {
            cout<< " ";
        }
        
        int j=1;
        int val=i;
        while(j<=i){
            cout<<val;
            val++;
            j++;
        }
        /*
        for(k = (N-i+1);k <=N; k++)
        {
            
           cout<<(i + k - num-3 + temp);
           
        }
           temp = i;
        */
        cout<<endl;     
        i++;
    }
}



Start Pattern
Send Feedback
Print the following pattern
Pattern for N = 4



The dots represent spaces.



Input Format :
N (Total no. of rows)
Output Format :
Pattern in N lines
Constraints :
0 <= N <= 50
Sample Input 1 :
3
Sample Output 1 :
   *
  *** 
 *****
Sample Input 2 :
4
Sample Output 2 :
    *
   *** 
  *****
 *******
 #include<iostream>
using namespace std;
#include<bits/stdc++.h>


int main(){

    int i,j,n,k,l,m;
    cin>>n;
    for(i = 1; i <= n ; i++)
    {
        for(int j = 1; j <=(n-i); j++)
        {
            cout<<" ";
        }
        for(int k = 0; k <(i); k++)
        {
            cout<<"*";
        }
        for(int l = 0; l <(i - 1); l++)
        {
            cout<<"*";
        }
        /*for(int m = 0; m <(i-1); m++)
        {
            cout<<"m";
        }*/
        cout<<endl;
    }
    return 0;
}
        
        Total Salary
Send Feedback
Write a program to calculate the total salary of a person. The user has to enter the basic salary (an integer) and the grade (an uppercase character), and depending upon which the total salary is calculated as -
    totalSalary = basic + hra + da + allow – pf
where :
hra   = 20% of basic
da    = 50% of basic
allow = 1700 if grade = ‘A’
allow = 1500 if grade = ‘B’
allow = 1300 if grade = ‘C' or any other character
pf    = 11% of basic.
Round off the total salary and then print the integral part only.
Note: Try finding out a function on the internet to do so
Input format :
Basic salary & Grade (separated by space)
Output Format :
Total Salary
Constraints :
0 <= Basic Salary <= 7,500,000
int allowe( char grade)
{
    double allow;
    switch(grade)
    {
        case 'A':
            allow = 1700;
            break;
        case 'B':
            allow = 1500;
            break;
        default:
            allow = 1300;
            break;
            }
    return allow;
}

#include<iostream>
using namespace std;
#include<bits/stdc++.h>

int main() {
	double base; 
    char grade;
    cin>>base>>grade;
    double hra = (0.2 * base), da = (0.5 * base), pf = (0.11 * base);
    double ts;
    
    double all = allowe(grade);
     ts = (base + hra + da + all - pf);
     // ts = round(ts);
    cout<<(int)round(ts);
    }
         
    
	
/*#include<iostream>
#include<cmath>
using namespace std;

int main() {
	// Write your code here
    
    double total_salary=0;
    int totalSalary;
    double  basic,hra,da,allow,pf;
    char ch;
    
    cin>>basic;
    cin>>ch;
    hra = (20*basic)/100; 
    da = (50*basic)/100; 
    pf= (11*basic)/100; 

    if(basic<=7500000)
    {
    if(ch=='A')
    {
        allow=1700;  
    }
    else if(ch=='B')
    {
        allow=1500;
    }                                    
    else
    {
        allow=1300;
    }
        total_salary = basic + hra + da + allow - pf; 
    }
    totalSalary = round(total_salary);
    cout<<totalSalary;
}*/



Sum of even & odd
Send Feedback
Write a program to input an integer N and print the sum of all its even digits and sum of all its odd digits separately.
Digits mean numbers, not the places! That is, if the given integer is "13245", even digits are 2 & 4 and odd digits are 1, 3 & 5.
Input format :
 Integer N
Output format :
Sum_of_Even_Digits Sum_of_Odd_Digits
(Print first even sum and then odd sum separated by space)
Constraints
0 <= N <= 10^8
Sample Input 1:
1234
Sample Output 1:
6 4
Sample Input 2:
552245
Sample Output 2:
8 15
Explanation for Input 2:
For the given input, the even digits are 2, 2 and 4 and if we take the sum of these digits it will come out to be 8(2 + 2 + 4) and similarly, if we look at the odd digits, they are, 5, 5 and 5 which makes a sum of 15(5 + 5 + 5). Hence the answer would be, 8(evenSum) <single space> 15(oddSum)
#include<iostream>
#include<bits/stdc++.h>
using namespace std;
int main()
{
    int n, even = 0, odd = 0,a;
    cin>>n;
    while(n>=1)
    {
         a = n%10;
         n = n/10;
        if((a % 2) == 0)
        {
            even = (even + a);
        }
        else
            odd = (odd + a);
        
    }
    cout<<even<<" "<<odd;
    return 0;
}



Find power of a number
Send Feedback
Write a program to find x to the power n (i.e. x^n). Take x and n from the user. You need to print the answer.
Note : For this question, you can assume that 0 raised to the power of 0 is 1


Input format :
Two integers x and n (separated by space)
Output Format :
x^n (i.e. x raise to the power n)
Constraints:
0 <= x <= 8 
0 <= n <= 9
Sample Input 1 :
 3 4
Sample Output 1 :
81
Sample Input 2 :
 2 5
Sample Output 2 :
32
#include<iostream>
using namespace std;
#include <bits/stdc++.h>

int main() {
	int x,n,res;
    cin>>x>>n;
    res=pow(x,n);
    cout<<res<<endl;
	}

