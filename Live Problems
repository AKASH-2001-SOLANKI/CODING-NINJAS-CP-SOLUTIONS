https://www.codechef.com/problems/KCON
https://leetcode.com/problems/maximum-product-subarray/
https://www.codingninjas.com/codestudio/problem-details/mindbending-product_699915
https://www.codechef.com/problems/COOK82C
https://www.codechef.com/problems/VOTERS
https://www.codechef.com/problems/PERMPAL

Rotate array
Send Feedback
You have been given a random integer array/list(ARR) of size N. Write a function that rotates the given array/list by D elements(towards the left).
 Note:
Change in the input array/list itself. You don't need to return or print the elements.
Input format :
The first line contains an Integer 't' which denotes the number of test cases or queries to be run. Then the test cases follow.

First line of each test case or query contains an integer 'N' representing the size of the array/list.

Second line contains 'N' single space separated integers representing the elements in the array/list.

Third line contains the value of 'D' by which the array/list needs to be rotated.
Output Format :
For each test case, print the rotated array/list in a row separated by a single space.

Output for every test case will be printed in a separate line.
Constraints :
1 <= t <= 10^4
0 <= N <= 10^6
0 <= D <= N
Time Limit: 1 sec
Sample Input 1:
1
7
1 2 3 4 5 6 7
2
Sample Output 1:
3 4 5 6 7 1 2
Sample Input 2:
2
7
1 2 3 4 5 6 7
0
4
1 2 3 4
2
Sample Output 2:
1 2 3 4 5 6 7
3 4 1 2

void rotate(int *a, int d, int n)
{
    int  e = (n - d);
    int temp[n];
    for(int i = 0 ; i < n ; i++ )
    {
        temp[(i + e) % n] = a[i];
    }
    for(int i = 0 ; i < n ; i++ )
    {
        a[i] = temp[i];
    }
}





Pair sum to 0
Send Feedback
Given a random integer array A of size N. Find and print the count of pair of elements in the array which sum up to 0.
Note: Array A can contain duplicate elements as well.
Input format:
The first line of input contains an integer, that denotes the value of the size of the array. Let us denote it with the symbol N.
The following line contains N space separated integers, that denote the value of the elements of the array.
Output format :
The first and only line of output contains the count of pair of elements in the array which sum up to 0. 
Constraints :
0 <= N <= 10^4
Time Limit: 1 sec
Sample Input 1:
5
2 1 -2 2 3
Sample Output 1:
2

#include <algorithm>
#include <utility>
#include <unordered_map>
int pairSum(int *a, int n) {
     unordered_map<int, int> mp;
    int cnt = 0;
    for(int i = 0 ; i < n ; i++)
    {
        mp[a[i]]++;
    }
    for (auto itr = mp.begin(); itr != mp.end(); itr++)
    {
        
        if( ( itr->first != 0) && (mp.find(0 - (itr->first)) != mp.end()))
        {
            cnt = cnt + ((mp[itr->first])*(mp[0 - (itr->first)]));
        }
        else
        {
            int f = mp[0];
            cnt = cnt + (f*(f - 1));
    }
    
    
    
}
    return (cnt/2);
}





Longest Consecutive Sequence
Send Feedback
You are given an array of unique integers that contain numbers in random order. You have to find the longest possible sequence of consecutive numbers using the numbers from given array.
You need to return the output array which contains starting and ending element. If the length of the longest possible sequence is one, then the output array must contain only single element.
Note:
1. Best solution takes O(n) time.
2. If two sequences are of equal length, then return the sequence starting with the number whose occurrence is earlier in the array.
Input format:
The first line of input contains an integer, that denotes the value of the size of the array. Let us denote it with the symbol n.
The following line contains n space separated integers, that denote the value of the elements of the array.
Output format:
The first and only line of output contains starting and ending element of the longest consecutive sequence. If the length of longest consecutive sequence, then just print the starting element.
Constraints :
0 <= n <= 10^6
Time Limit: 1 sec
Sample Input 1 :
13
2 12 9 16 10 5 3 20 25 11 1 8 6 
Sample Output 1 :
8 12 
Sample Input 2 :
7
3 7 2 1 9 8 41
Sample Output 2 :
7 9
Explanation: Sequence should be of consecutive numbers. Here we have 2 sequences with same length i.e. [1, 2, 3] and [7, 8, 9], but we should select [7, 8, 9] because the starting point of [7, 8, 9] comes first in input array and therefore, the output will be 7 9, as we have to print starting and ending element of the longest consecutive sequence.
Sample Input 3 :
7
15 24 23 12 19 11 16
Sample Output 3 :
15 16

#include<bits/stdc++.h>
vector<int> longestConsecutiveIncreasingSequence(int *arr, int n) {
    // Your Code goes here
    unordered_map<int,int>m;
    for(int i=0;i<n;i++)
    {
        m[arr[i]]=i+1;
    }
    unordered_map<int,int>::iterator itr=m.begin();
    int l=0;
    int p=9999;
    int s=9999;
    while(itr!=m.end())
    {
        if(itr->second!=0)
        {int le=1;
    	int x=itr->first;
        int po=itr->second;
        int st=itr->first;
        int y=x;
        x++;
        while(m.find(x)!=m.end() && m[x]>0)
        {
            le++;
            m[x]=0;
            x++;
        }
        x=y;
        x--;
        while(m.find(x)!=m.end() && m[x]>0)
        {
            le++;
            po=m[x];
            st=x;
            m[x]=0;
            x--;
        }
        if(le>l)
        {
            l=le;
            p=po;
            s=st;
        }
        else if(le==l && po<p)
        {
            l=le;
            p=po;
            s=st;
        }}
        itr++;
    }
    vector<int>v;
	if(l==1)
        v.push_back(s);
    else
    {
        v.push_back(s);
        v.push_back(s+l-1);
    }
    return v;
}
